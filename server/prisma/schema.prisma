// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String @id @map("_id") @db.ObjectId @default(auto()) 
  fullName      String 
  email         String @unique
  password      String
  isVerified    Boolean @default(false)
  socialLinks   Socials[] 
  organisations Organisation?
  memberId Member?
}

model Organisation {
  id          String @id @map("_id") @db.ObjectId @default(auto()) 
  name        String
  description String
  logoUrl     String 
  workspaces  Workspace[]
  createdById String @db.ObjectId @unique
  user User @relation(references: [id], fields: [createdById])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?
}

model Workspace {
  id              String @id @map("_id") @db.ObjectId @default(auto()) 
  name            String
  organisationId  String @db.ObjectId
  organisation    Organisation @relation(fields: [organisationId],references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  deletedAt DateTime?
}

model Member{
  id String @db.ObjectId @id @default(auto()) @map("_id")
  role String @default("USER")
  userId String @db.ObjectId @unique
  user User @relation(fields: [userId], references: [id])
  organisatonID String @db.ObjectId
  organisaton Organisation @relation(fields: [organisatonID], references: [id])
  
}



type Socials{
  name String
  link String
}